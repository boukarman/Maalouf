<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd">
        
	<!-- This is where we configure Spring-Security  -->
	<security:http auto-config="false" use-expressions="true" access-denied-page="/event/denied"
			entry-point-ref="authenticationEntryPoint" >
 		<security:intercept-url pattern="/resources/**" access="permitAll"/>
		<security:intercept-url pattern="/login/load-view" access="permitAll"/>
		<security:intercept-url pattern="/fdsps/admin" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/fdsps/common/user" access="hasRole('ROLE_USER')"/>
		<security:intercept-url pattern="/**" access="isAuthenticated()"/>
				
		<security:logout 
				invalidate-session="true" 
				logout-success-url="/login/load-view" 
				logout-url="/logout"/>
	
		<security:custom-filter ref="authenticationFilter" position="FORM_LOGIN_FILTER"/>
	</security:http>
 	
 	<!-- Custom filter for username and password. The real customization is done in the customAthenticationManager -->
 	<bean id="authenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"
  		p:authenticationManager-ref="telecomAuthenticationManager"
  		p:authenticationFailureHandler-ref="telecomAuthenticationFailureHandler"
  		p:authenticationSuccessHandler-ref="telecomAuthenticationSuccessHandler" />
  		
	<!-- Custom authentication manager. In order to authenticate, username and password must not be the same -->
	<bean id="telecomAuthenticationManager" class="tn.tunisietelecom.web.security.TelecomAuthenticationManager" />
 	
 	<!-- We just actually need to set the default failure url here -->
 	<bean id="telecomAuthenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"
 		p:defaultFailureUrl="/login/load-view?error=true" />
 		
 	 <!-- We just actually need to set the default target url here -->
 	<bean id="telecomAuthenticationSuccessHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler"
 		p:defaultTargetUrl="/telecom/main" />
 	
 	<!-- The AuthenticationEntryPoint is responsible for redirecting the user to a particular page, like a login page,
 			whenever the server sends back a response requiring authentication -->
 	<!-- See Spring-Security Reference 5.4.1 for more info -->
 	<bean id="authenticationEntryPoint"  class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint"
	 	p:loginFormUrl="/login/load-view" />

	<!-- The tag below has no use but Spring Security needs it to autowire the parent property of 
			org.springframework.security.authentication.ProviderManager. Otherwise we get an error 
			A probable bug. This is still under investigation-->
	<security:authentication-manager/>
</beans>